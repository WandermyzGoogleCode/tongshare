#summary deployment doc for tongshare and thuauth.

= 用Capistrano部署 =
 capistrano是针对rails项目的一个部署的脚本框架，它可以与svn或git结合
== 使用方法 ==
 * 初始化
{{{
    sudo apt-get install capistrano
    cd PROJ_ROOT_DIR
    capify . (only for project with no deploy.rb config file..)
}}}
 * cap deploy 最常用的命令。它会降代码checkout到目标服务器，然后restart服务
 * cap deploy:update 把svn的代码checkout到目标服务器
 * cap deploy:start 运行目标服务器上的服务
 
== 配置 ==
 主要的配置位于 config/deploy.rb 中
 * 配置文件比较易懂，前面主要是配置一些常量。
 * 后半部分定义了几个task，通过cap deploy:XXX调用 task XXX.
 * 需要注意的是，有必要在checkout代码后调用一遍bundle install，以保证插件的完整性。否则服务运行时会不断地抛exception
 * *服务器上新建了一个deployer账号，用来部署，部署时需要输入此账号的密码。*
 * *svn的checkout目前用的是paullzn以及对应的密码，直接写在配置文件当中。*
 * *tongshare服务部署在/var/www/tongshare/*
 * *thuauth服务部署在/var/www/thuauth/*
 * *hack文件夹放在/var/www/hack/*

= 用unicorn+apache运行服务 =
 unicorn 是一个具有UNIX特性的ruby服务器，通常与nginx前端服务器配合使用。
 这里是官方网站：http://unicorn.bogomips.org/
 * 一个unicorn会启动一个master进程以及N个slave进程。每一个slave跑一个rails实例，unicorn的各个进程的负载完全由linux系统的进程管理来做balance，如果某个slave出了问题就重启一个新的。unicorn可以做到服务的永不掉线。

== 使用方法 ==
 * 一个典型的启动方法是
{{{
 cd RPOJ_ROOT_DIR
 unicorn_rails -cconfig/unicorn.rb -E development -D
}}}
 * 运行的unicorn的master进程号会存在tmp/pids目录下
 * unicorn_rails会根据config/unicorn.rb中的配置运行。
 * -E参数表示运行development版还是production版等
 * -D参数表示后台运行
 * unicorn的错误记录一般会记录在log/unicorn.stderror.log中

== 配置 ==
 Unicorn的配置文件位于config/unicorn.rb中
 * 配置文件也很容易读懂。没有什么特殊的地方。
 * *tongshare 运行在 127.0.0.1:3000*
 * *thuauth 运行在 127.0.0.1:3001*

= Bundle的配置 =
 bundler是Rails3 新加的dependency管理工具，使用比以前的plugin方便。
 * 当前项目所有依赖的插件均记录在Gemfile中，
 * 当代码checkout到一个新的环境中之后，只需运行bundle install，就可以将所需要的所有插件补全，保证服务可以被运行。其中可能会从git上下载代码，需要出国。
 * 项目目录下有一个.bundle隐藏目录，其下有一个config文件，其中记录了插件安装的位置。因为项目的所有文件都由svn控制，所以我将其加入了svn仓库中。

= apache的配置 =
*在httpd-vhost.conf中配置了两个新的Virtual host*
 * *www.tongshare.com 和tongshare.com 指向 127.0.0.1:3000*
 * *thuauth.tongshare.com 指向 127.0.0.1:3001*